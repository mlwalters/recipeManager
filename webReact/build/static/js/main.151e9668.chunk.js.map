{"version":3,"sources":["components/RecipeCard.jsx","components/Dashboard.jsx","components/RecipeDetails.jsx","App.jsx","index.jsx"],"names":["RecipeCard","useState","details","setDetails","error","setError","useEffect","fetchData","a","axios","get","process","data","map","id","name","description","Card","sx","maxWidth","CardHeader","avatar","Avatar","bgcolor","red","action","IconButton","title","subheader","CardMedia","component","height","image","alt","CardContent","Typography","variant","color","CardActions","disableSpacing","Dashboard","Grid","container","item","xs","Item","styled","Paper","theme","typography","body2","padding","spacing","textAlign","palette","text","secondary","RecipeDetails","notes","servingSize","instructions","useParams","Box","flexGrow","step","stepNumber","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.151e9668.chunk.js","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\n// import { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { red } from '@mui/material/colors';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n\nconst RecipeCard = () => {\n  const [details, setDetails] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(`${process.env.REACT_APP_BASE_API}/api/Recipe`);\n        setDetails(data);\n      } catch (err) {\n        setError(err);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (error) {\n    return (\n      <div>Oops! Could not fetch recipe card.</div>\n    );\n  }\n\n  return (\n    <>\n      {details.map(({ id, name, description }) => (\n        <Card sx={{ maxWidth: 345 }} key={id}>\n          <CardHeader\n            avatar={<Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">R</Avatar>}\n            action={<IconButton aria-label=\"settings\"><MoreVertIcon /></IconButton>}\n            title={name}\n            subheader=\"October 28, 2021\"\n          />\n          <CardMedia\n            component=\"img\"\n            height=\"194\"\n            image=\"https://images.unsplash.com/photo-1621955511667-e2c316e4575d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8Y2hlZXNlY2FrZXxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=900&q=60\"\n            alt=\"Strawberry cheesecake\"\n          />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {description}\n            </Typography>\n          </CardContent>\n          <CardActions disableSpacing>\n            <IconButton aria-label=\"add to favorites\">\n              <FavoriteIcon />\n            </IconButton>\n            <IconButton aria-label=\"share\">\n              <ShareIcon />\n            </IconButton>\n          </CardActions>\n        </Card>\n      ))}\n    </>\n  );\n};\n\nexport default RecipeCard;\n","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport RecipeCard from './RecipeCard';\n\nconst Dashboard = () => (\n  <Grid container>\n    <Grid item xs={2}>\n      <Typography variant=\"h6\" color=\"primary\">\n        Favorites\n      </Typography>\n      <Typography variant=\"h6\" color=\"primary\">\n        Meal Planner\n      </Typography>\n      <Typography variant=\"h6\" color=\"primary\">\n        Shopping List\n      </Typography>\n    </Grid>\n    <Grid item xs={10}>\n      <Grid item>\n        <RecipeCard />\n      </Grid>\n    </Grid>\n  </Grid>\n);\n\nexport default Dashboard;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport { useParams } from 'react-router-dom';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nconst RecipeDetails = () => {\n  // const [details, setDetails] = useState({});\n  const [details, setDetails] = useState({\n    id: 0, name: '', description: '', notes: '', servingSize: 0, instructions: [],\n  });\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(`${process.env.REACT_APP_BASE_API}/api/Recipe/${id}`);\n        setDetails(data);\n      } catch (err) {\n        setError(err);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (error) {\n    return (\n      <div>Oops! Could not fetch recipe details.</div>\n    );\n  }\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={3}>\n        <Grid item xs=\"10\">\n          <Item>\n            <Typography variant=\"h2\" color=\"#263238\">{details.name}</Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">{details.description}</Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Serving size:\n              {' '}\n              {details.servingSize}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">{details.notes}</Typography>\n          </Item>\n          <Item>\n            {details.instructions.map(({ step, stepNumber }) => (\n              <div>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {stepNumber}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">{step}</Typography>\n              </div>\n            ))}\n          </Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default RecipeDetails;\n","import './App.scss';\nimport React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport RecipeDetails from './components/RecipeDetails';\n\nfunction App() {\n  return (\n    <div>\n      <Routes>\n        <Route path=\"/recipe/:id\" element={<RecipeDetails />} />\n        <Route path=\"/\" element={<Dashboard />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}